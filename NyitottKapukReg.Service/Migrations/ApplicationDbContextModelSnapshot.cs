// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NyitottKapukReg.Service;

namespace NyitottKapukReg.Service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NyitottKapukReg.Service.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxVisitors")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Day");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxVisitors = 192
                        });
                });

            modelBuilder.Entity("NyitottKapukReg.Service.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentName1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentName2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StudentName1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StudentName2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StudentName3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StudentName4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("VisitorGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("VisitorGroupId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("NyitottKapukReg.Service.Models.VisitorGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClassroomNumber")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("DayId")
                        .HasColumnType("int");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("VisitorGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassroomNumber = "110",
                            GroupNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassroomNumber = "110",
                            GroupNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            ClassroomNumber = "110",
                            GroupNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            ClassroomNumber = "110",
                            GroupNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            ClassroomNumber = "106",
                            GroupNumber = 5
                        },
                        new
                        {
                            Id = 6,
                            ClassroomNumber = "112",
                            GroupNumber = 6
                        },
                        new
                        {
                            Id = 7,
                            ClassroomNumber = "205",
                            GroupNumber = 7
                        },
                        new
                        {
                            Id = 8,
                            ClassroomNumber = "207",
                            GroupNumber = 8
                        },
                        new
                        {
                            Id = 9,
                            ClassroomNumber = "208",
                            GroupNumber = 9
                        },
                        new
                        {
                            Id = 10,
                            ClassroomNumber = "209",
                            GroupNumber = 10
                        },
                        new
                        {
                            Id = 11,
                            ClassroomNumber = "210",
                            GroupNumber = 11
                        },
                        new
                        {
                            Id = 12,
                            ClassroomNumber = "212",
                            GroupNumber = 12
                        });
                });

            modelBuilder.Entity("NyitottKapukReg.Service.Models.Registration", b =>
                {
                    b.HasOne("NyitottKapukReg.Service.Models.Day", "Day")
                        .WithMany()
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NyitottKapukReg.Service.Models.VisitorGroup", "VisitorGroup")
                        .WithMany()
                        .HasForeignKey("VisitorGroupId");
                });

            modelBuilder.Entity("NyitottKapukReg.Service.Models.VisitorGroup", b =>
                {
                    b.HasOne("NyitottKapukReg.Service.Models.Day", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");
                });
#pragma warning restore 612, 618
        }
    }
}
